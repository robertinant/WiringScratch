include Variables.mk

BOARD_DIR := $(APPLICATION_PATH)/hardware/$(PLATFORM)/$(BOARD)
COMMON_LIB_PATH := $(APPLICATION_PATH)/libraries
ARCH_LIB_PATH := $(APPLICATION_PATH)/cores/$(ARCH)/libraries
ARCH_CORE_PATH := $(APPLICATION_PATH)/cores/$(ARCH)
COMMON_CORE_DIR := $(APPLICATION_PATH)/cores/Common

DIRS := $(COMMON_LIB_PATH) $(BOARD_DIR) $(CORES) $(ARCH_CORE_PATH) $(COMMON_CORE_DIR) $(ARCH_LIB_PATH)
INCLUDE_DIRS = $(foreach dir, $(DIRS), ${sort ${dir ${wildcard ${dir}/*/ ${dir}/*/utility/}}})

# Generate a list for the preprocessor
CPPFLAGS += $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir))

define deps
$(foreach SRC, $1, $(shell $(CC) $(MCU) -MM $(CPPFLAGS) $(SRC)))
endef

# (Ab)use the dependency tree to figure out what libraries the file in question depends on and add them to LIBSRCS
define get_lib_dirs
$(if $(findstring libraries, ${1}), \
	$(eval _LIBDIRS = $(filter-out ${1}, $(_LIBDIRS))) \
	$(eval _LIBDIRS+=${1}))
endef

define compute_dependencies
$(eval _LIBDIRS:=)
$(eval _SRCS:= ${1})
$(eval LIBDEP = $(call deps, $(_SRCS)))
$(foreach dep, $(dir $(LIBDEP)), $(call get_lib_dirs, $(dep)))
$(eval _LIBDIRS = $(filter-out $(LIBDIRS), $(_LIBDIRS)))

$(if $(_LIBDIRS), \
	$(eval _LIBDIRS += $(addsuffix utility/,$(_LIBDIRS))) \
	$(eval LIBDIRS += $(_LIBDIRS)) \
	$(eval _SRCS = $(wildcard $(patsubst %,%*.c,$(_LIBDIRS)))) \
	$(eval _SRCS += $(wildcard $(patsubst %,%*.cpp,$(_LIBDIRS)))) \
	$(call compute_dependencies, $(_SRCS)),)
endef

define compute_srcs
$(eval DEP_LIB_C_SRCS += $(wildcard $(patsubst %,%*.c,$(LIBDIRS))))
$(eval DEP_LIB_CPP_SRCS += $(wildcard $(patsubst %,%*.cpp,$(LIBDIRS))))
endef

default:
	$(call compute_dependencies, $(addsuffix .cpp, $(SKETCH_NAME)) $(EXTRA_SOURCES))
	$(call compute_srcs, $(LIBDIRS))
	$(info $(DEP_LIB_C_SRCS))
	$(info $(DEP_LIB_CPP_SRCS))

